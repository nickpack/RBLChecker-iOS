<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/GHTestRunner.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/GHTestRunner</TokenIdentifier>
			<Abstract type="html">Runs the tests.
Tests are run a separate thread though delegates are called on the main thread by default.</Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>
			
			<NodeRef refid="10"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/setTest:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (strong) id&lt;GHTest&gt; test</Declaration>
			
			
			<Anchor>//api/name/test</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GHTestRunner/test</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (strong) id&lt;GHTest&gt; test</Declaration>
			
			
			<Anchor>//api/name/test</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/setDelegate:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (unsafe_unretained) NSObject&lt;GHTestRunnerDelegate&gt; *delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GHTestRunner/delegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (unsafe_unretained) NSObject&lt;GHTestRunnerDelegate&gt; *delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/setOptions:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (assign) GHTestOptions options</Declaration>
			
			
			<Anchor>//api/name/options</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GHTestRunner/options</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (assign) GHTestOptions options</Declaration>
			
			
			<Anchor>//api/name/options</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/setStats:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (readonly) GHTestStats stats</Declaration>
			
			
			<Anchor>//api/name/stats</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GHTestRunner/stats</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (readonly) GHTestStats stats</Declaration>
			
			
			<Anchor>//api/name/stats</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/setRunning:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (readonly, getter=isRunning) BOOL running</Declaration>
			
			
			<Anchor>//api/name/running</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GHTestRunner/running</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (readonly, getter=isRunning) BOOL running</Declaration>
			
			
			<Anchor>//api/name/running</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/setCancelling:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (readonly, getter=isCancelling) BOOL cancelling</Declaration>
			
			
			<Anchor>//api/name/cancelling</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GHTestRunner/cancelling</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (readonly, getter=isCancelling) BOOL cancelling</Declaration>
			
			
			<Anchor>//api/name/cancelling</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/setInterval:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSTimeInterval interval</Declaration>
			
			
			<Anchor>//api/name/interval</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GHTestRunner/interval</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSTimeInterval interval</Declaration>
			
			
			<Anchor>//api/name/interval</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/setOperationQueue:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSOperationQueue *operationQueue</Declaration>
			
			
			<Anchor>//api/name/operationQueue</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GHTestRunner/operationQueue</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic) NSOperationQueue *operationQueue</Declaration>
			
			
			<Anchor>//api/name/operationQueue</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/setInParallel:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (assign, nonatomic, getter=isInParallel) BOOL inParallel</Declaration>
			
			
			<Anchor>//api/name/inParallel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GHTestRunner/inParallel</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>@property (assign, nonatomic, getter=isInParallel) BOOL inParallel</Declaration>
			
			
			<Anchor>//api/name/inParallel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/initWithTest:</TokenIdentifier>
			<Abstract type="html">Create runner for test.</Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>- (id)initWithTest:(id&lt;GHTest&gt;)test</Declaration>
			<Parameters>
				<Parameter>
					<Name>test</Name>
					<Abstract type="html">Test</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithTest:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GHTestRunner/runnerForAllTests</TokenIdentifier>
			<Abstract type="html">Create runner for all tests.</Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/GHTesting/loadAllTestCases</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (GHTestRunner *)runnerForAllTests</Declaration>
			
			<ReturnValue><Abstract type="html">Runner</Abstract></ReturnValue>
			<Anchor>//api/name/runnerForAllTests</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GHTestRunner/runnerForSuite:</TokenIdentifier>
			<Abstract type="html">Create runner for test suite.</Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>+ (GHTestRunner *)runnerForSuite:(GHTestSuite *)suite</Declaration>
			<Parameters>
				<Parameter>
					<Name>suite</Name>
					<Abstract type="html">Suite</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Runner</Abstract></ReturnValue>
			<Anchor>//api/name/runnerForSuite:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GHTestRunner/runnerForTestClassName:methodName:</TokenIdentifier>
			<Abstract type="html">Create runner for class and method.</Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>+ (GHTestRunner *)runnerForTestClassName:(NSString *)testClassName methodName:(NSString *)methodName</Declaration>
			<Parameters>
				<Parameter>
					<Name>testClassName</Name>
					<Abstract type="html">Test class name</Abstract>
				</Parameter><Parameter>
					<Name>methodName</Name>
					<Abstract type="html">Test method</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Runner</Abstract></ReturnValue>
			<Anchor>//api/name/runnerForTestClassName:methodName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GHTestRunner/runnerFromEnv</TokenIdentifier>
			<Abstract type="html">Get the runner from the environment.
If the TEST env is set, then we will only run that test case or test method.</Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>+ (GHTestRunner *)runnerFromEnv</Declaration>
			
			
			<Anchor>//api/name/runnerFromEnv</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GHTestRunner/run</TokenIdentifier>
			<Abstract type="html">Run the test runner. Usually called from the test main.
Reads the TEST environment variable and filters on that; or all tests are run.</Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>+ (int)run</Declaration>
			
			<ReturnValue><Abstract type="html">0 is success, otherwise the failure count</Abstract></ReturnValue>
			<Anchor>//api/name/run</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/runInBackground</TokenIdentifier>
			<Abstract type="html">Run in the background.</Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>- (void)runInBackground</Declaration>
			
			
			<Anchor>//api/name/runInBackground</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/runTests</TokenIdentifier>
			<Abstract type="html">Start the test runner.</Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>- (int)runTests</Declaration>
			
			<ReturnValue><Abstract type="html">0 is success, otherwise the failure count</Abstract></ReturnValue>
			<Anchor>//api/name/runTests</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/cancel</TokenIdentifier>
			<Abstract type="html">Cancel test run.</Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>- (void)cancel</Declaration>
			
			
			<Anchor>//api/name/cancel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GHTestRunner/log:</TokenIdentifier>
			<Abstract type="html">Write message to console.</Abstract>
			<DeclaredIn>GHTestRunner.h</DeclaredIn>			
			
			<Declaration>- (void)log:(NSString *)message</Declaration>
			<Parameters>
				<Parameter>
					<Name>message</Name>
					<Abstract type="html">Message to log</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/log:</Anchor>
		</Token>
		
	</File>
</Tokens>